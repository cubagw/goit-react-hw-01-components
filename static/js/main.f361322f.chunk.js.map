{"version":3,"sources":["components/Profile/Profile.module.css","components/Stats/Stats.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Stats/Stats.js","components/TransactionHistory/TransactionHistory.js","components/FriendList/FriendList.js","components/App.js","index.js"],"names":["module","exports","Profile","user","className","styles","profile","description","avatar","src","alt","name","tag","location","stats","item","label","quantity","followers","views","likes","Stats","title","section","list","map","stat","key","id","percentage","defaultProps","TransactionHistory","items","transactionHistory","type","amount","currency","FriendList","friends","friendList","friend","isOnline","userIsActiv","userIsNotActiv","width","App","statsConfig","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f361322f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ojqE\",\"description\":\"Profile_description__2WPUv\",\"avatar\":\"Profile_avatar__UnSqI\",\"name\":\"Profile_name__wnVhg\",\"tag\":\"Profile_tag__1jvLK\",\"location\":\"Profile_location__1X4DJ\",\"stats\":\"Profile_stats__ViYwZ\",\"item\":\"Profile_item__wxJ8S\",\"label\":\"Profile_label__2qHdu\",\"quantity\":\"Profile_quantity__2pcmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__3HqOv\",\"title\":\"Stats_title__2B3kF\",\"list\":\"Stats_list__Sg-2g\",\"item\":\"Stats_item__2OUYn\",\"label\":\"Stats_label___MntD\",\"percentage\":\"Stats_percentage__3VRqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-font-stack\":\"Roboto, sans-serif\",\"primary-font-size\":\"32px\",\"name\":\"FriendList_name__32H4_\",\"userIsActiv\":\"FriendList_userIsActiv__3m2Pj\",\"userIsNotActiv\":\"FriendList_userIsNotActiv__2yrNd FriendList_userIsActiv__3m2Pj\",\"friendList\":\"FriendList_friendList__yAEKO\",\"item\":\"FriendList_item__2gzSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1RpG_\"};","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ user }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img className={styles.avatar} src={user.avatar} alt=\"user avatar\" />\r\n      <p className={styles.name}>{user.name}</p>\r\n      <p className={styles.tag}>@{user.tag}</p>\r\n      <p className={styles.location}>{user.location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li className={styles.item}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{user.stats.followers}</span>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{user.stats.views}</span>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{user.stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  user: T.shape({\r\n    avatar: T.string.isRequired,\r\n    name: T.string.isRequired,\r\n    tag: T.string.isRequired,\r\n    location: T.string.isRequired,\r\n    stats: T.shape({\r\n      followers: T.number.isRequired,\r\n      views: T.number.isRequired,\r\n      likes: T.number.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './Stats.module.css';\r\n\r\nconst Stats = ({ title, stats }) => (\r\n  <section className={styles.section}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    <ul className={styles.list}>\r\n      {stats.map(stat => (\r\n        <li key={stat.id} className={styles.item}>\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStats.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStats.propTypes = {\r\n  title: T.string,\r\n  stats: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      label: T.string.isRequired,\r\n      percentage: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\nexport default Stats;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.string.isRequired,\r\n      currency: T.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(friend => (\r\n      <li key={friend.id} className={styles.item}>\r\n        <span\r\n          className={\r\n            friend.isOnline ? styles.userIsActiv : styles.userIsNotActiv\r\n          }\r\n        />\r\n        <img className=\"avatar\" src={friend.avatar} alt=\"\" width=\"48\" />\r\n        <p className={styles.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: T.arrayOf(\r\n    T.shape({\r\n      avatar: T.string.isRequired,\r\n      name: T.string.isRequired,\r\n      isOnline: T.bool.isRequired,\r\n      id: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\nimport Stats from './Stats/Stats';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport FriendList from './FriendList/FriendList';\r\n\r\nimport user from './Profile/user.json';\r\nimport statsConfig from './Stats/statsConfig.json';\r\nimport transactions from './TransactionHistory/transactions.json';\r\nimport friends from './FriendList/friends.json';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile user={user} />\r\n    <Stats title=\"Upload stats\" stats={statsConfig} />\r\n    <TransactionHistory items={transactions} />\r\n    <FriendList friends={friends} />\r\n  </>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}